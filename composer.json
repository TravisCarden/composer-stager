{
    "name": "php-tuf/composer-stager",
    "description": "Stages Composer commands so they can be safely run on a production codebase.",
    "license": "MIT",
    "type": "library",
    "readme": "docs/README.md",
    "authors": [
        {
            "name": "Travis Carden",
            "email": "travis.carden@gmail.com",
            "role": "Developer"
        }
    ],
    "homepage": "https://github.com/php-tuf/composer-stager",
    "support": {
        "issues": "https://github.com/php-tuf/composer-stager/issues",
        "source": "https://github.com/php-tuf/composer-stager"
    },
    "require": {
        "php": "^7.3 || ^8.0",
        "symfony/filesystem": "^4.4 || ^5.2",
        "symfony/process": "^4.4 || ^5.2"
    },
    "require-dev": {
        "ext-json": "*",
        "dealerdirect/phpcodesniffer-composer-installer": "^0.7.1",
        "ergebnis/composer-normalize": "^2.20",
        "jangregor/phpstan-prophecy": "^0.8.1",
        "pepakriz/phpstan-exception-rules": "^0.11.6",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpmd/phpmd": "^2.10",
        "phpro/grumphp-shim": "^1.5",
        "phpspec/prophecy-phpunit": "^2.0",
        "phpstan/extension-installer": "^1.1",
        "phpstan/phpstan": "^0.12.83",
        "phpstan/phpstan-deprecation-rules": "^0.12.6",
        "phpstan/phpstan-strict-rules": "^0.12.9",
        "phpstan/phpstan-symfony": "^0.12.37",
        "phpunit/phpunit": "^9.5",
        "psalm/phar": "^4.8",
        "roave/security-advisories": "dev-latest",
        "slevomat/coding-standard": "^7.0",
        "squizlabs/php_codesniffer": "^3.5",
        "symfony/config": "^5.3",
        "symfony/dependency-injection": "^5.3",
        "symfony/yaml": "^5.3"
    },
    "suggest": {
        "roave/security-advisories": "Ensures that your application doesn't have installed dependencies with known security vulnerabilities."
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "PhpTuf\\ComposerStager\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "PhpTuf\\ComposerStager\\Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "ergebnis/composer-normalize": true,
            "phpro/grumphp-shim": true,
            "phpstan/extension-installer": true
        },
        "optimize-autoloader": true,
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-develop": "0.x-dev"
        },
        "grumphp": {
            "disable-plugin": true
        }
    },
    "scripts": {
        "all": "grumphp run",
        "c": "rm -r var/*/* &> /dev/null || true",
        "coverage": "open $(pwd)/var/phpunit/html-coverage/index.html || echo 'Run the \"coverage\" command to generate the coverage report.'",
        "functional": "phpunit --testsuite=Functional",
        "lint": "parallel-lint --no-progress bin/composer-stage src tests",
        "phpcbf": "phpcbf",
        "phpcs": "phpcs -s",
        "phpmd": "phpmd src text phpmd",
        "phpstan": "phpstan analyse",
        "phpunit": "phpunit",
        "security": "@composer update --dry-run roave/security-advisories",
        "static": "grumphp run --testsuite=static",
        "test": "grumphp run --testsuite=test",
        "unit": "phpunit --testsuite=Unit"
    },
    "scripts-descriptions": {
        "all": "Runs all automated tests and static analysis tools.",
        "c": "Clears the script caches in the \"var\" directory.",
        "coverage": "Opens the code coverage report generated by the \"test\" script (on macOS).",
        "functional": "Runs functional tests.",
        "lint": "Lints PHP files.",
        "phpcbf": "Automatically fixes standards violations where possible.",
        "phpcs": "Checks code for standards compliance.",
        "phpmd": "Looks for potential problems within the source code.",
        "phpstan": "Analyzes code to find bugs.",
        "phpunit": "Runs PHPUnit tests.",
        "security": "Checks installed dependencies for known security vulnerabilities.",
        "static": "Runs all static analysis tools.",
        "test": "Runs automated tests.",
        "unit": "Runs unit tests."
    }
}
