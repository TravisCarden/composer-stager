---
name: Tests

on:
    push:
        branches: [ main, wip ]
        paths-ignore:
            - .idea/**
            - docs/**
    pull_request:
        branches: [ main ]
        paths-ignore:
            - .idea/**
            - docs/**
    schedule:
        # Every Monday at 00:00:00 UTC.
        # @see https://crontab.cronhub.io/
        -   cron: "0 0 * * 1"

jobs:
    build:
        name: "PHP ${{ matrix.php }} - ${{ matrix.dependencies }} - ${{ matrix.os }}"
        runs-on: "${{ matrix.os }}"
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                php: ["7.3", "7.4", "8.0"]
                dependencies: [ lowest, highest]
        steps:
            -   name: "Set up PHP"
                uses: shivammathur/setup-php@v2 # https://github.com/marketplace/actions/setup-php-action
                with:
                    php-version: "${{ matrix.php }}"

            -   name: "Checkout code"
                uses: actions/checkout@v2 # https://github.com/marketplace/actions/checkout

            -   name: "Install dependencies"
                uses: ramsey/composer-install@v1 # https://github.com/marketplace/actions/install-composer-dependencies
                with:
                    # Note: Installing with "highest" dependencies implicitly checks them for known security
                    # vulnerabilities by updating roave/security-advisories.
                    dependency-versions: "${{ matrix.dependencies }}"

            -   name: "Validate composer.json"
                run: "composer validate"

            -   name: "Lint PHP"
                run: "composer lint"

            -   name: "Run PHPCS"
                if: "matrix.os != 'windows-latest'" # Windows line endings wreak havoc with coding standards.
                run: "composer phpcs"

            -   name: "Run PHPStan"
                run: "composer phpstan"

            -   name: "Run PHPMD"
                run: "composer phpmd"

            -   name: "Run PHPUnit"
                run: "composer phpunit"

            -   name: "Check dependencies for known security vulnerabilities"
                run: "composer security"
